!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=e.handleCardClick,a=e.handleDeleteCard,u=e.data;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=u.name,this._link=u.link,this._cardSelector=n,this._handleCardClick=i,this._handleDeleteCard=a,this._userId=r,this._idCardCreator=u.owner._id,this._idCard=u._id,this._api=o,this._likes=u.likes}var n,r;return n=t,(r=[{key:"_getTemplateCard",value:function(){this._item=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}},{key:"generateCard",value:function(){return this._getTemplateCard(),this._setEventListeners(),this._cardImage=this._item.querySelector(".element__image"),this._item.querySelector(".element__title").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._item.querySelector(".element__like-number").textContent=this._likes.length,this._checkDeleteCard(),this._checkLikeCard(),this._item}},{key:"_checkDeleteCard",value:function(){this._userId!=this._idCardCreator&&(this._item.querySelector(".element__delete").style.display="none")}},{key:"_checkLikeCard",value:function(){var e=this;this._likes.some((function(t){return t._id===e._userId}))&&this._item.querySelector(".element__like").classList.add("element__like_active")}},{key:"_setEventListeners",value:function(){var e=this;this._item.querySelector(".element__like").addEventListener("click",(function(){e._handleLikeCard()})),this._item.querySelector(".element__image").addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._item.querySelector(".element__delete").addEventListener("click",(function(){e._handleDeleteCard()}))}},{key:"_handleLikeCard",value:function(){var e=this._item.querySelector(".element__like"),t=this._item.querySelector(".element__like-number");e.classList.contains("element__like_active")?this._api.disLikeCard(this._idCard).then((function(n){e.classList.remove("element__like_active"),t.textContent=n.likes.length})).catch((function(e){return console.log(e)})):this._api.likeCard(this._idCard).then((function(n){e.classList.add("element__like_active"),t.textContent=n.likes.length})).catch((function(e){return console.log(e)}))}},{key:"handleRemoveCard",value:function(){this._item.closest(".element").remove(),this._item=null}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","disabled")):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"checkValidationOpenPopup",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._toggleButtonState()}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._element=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._element.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._element.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._element.addEventListener("click",(function(t){(t.target===e._element||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},c.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function f(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._callbackSabmitForm=t,n._formElement=n._element.querySelector(".popup__container"),n._inputList=n._formElement.querySelectorAll(".popup__input"),n._popupBtn=n._formElement.querySelector(".popup__submit"),n._popupBtnText=n._popupBtn.textContent,n}return t=a,(n=[{key:"close",value:function(){c(p(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputList.forEach((function(t){e._values[t.name]=t.value})),this._values}},{key:"setEventListeners",value:function(){var e=this;c(p(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSabmitForm(e._getInputValues()),e.close()}))}},{key:"renderRetention",value:function(e){this._popupBtn.textContent=e?"Сохранение...":this._popupBtnText}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=m(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},y.apply(this,arguments)}function m(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function v(e,t){return v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v(e,t)}function b(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._cardPopupImage=t._element.querySelector(".popup__image"),t._cardPopupImageTitle=t._element.querySelector(".popup__image-title"),t}return t=a,(n=[{key:"open",value:function(e,t){this._cardPopupImageTitle.textContent=e,this._cardPopupImage.src=t,this._cardPopupImage.alt=e,y(k(a.prototype),"open",this).call(this)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"rendererItems",value:function(e){var t=this;e.reverse().forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t){var n=t.selectorProfilePopupName,r=t.selectorProfilePopupJob,o=t.selectorAvatarPopup;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profilePopupName=document.querySelector(n),this._profilePopupJob=document.querySelector(r),this._profilePopupAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._profilePopupName.textContent,job:this._profilePopupJob.textContent}}},{key:"setUserInfo",value:function(e,t){this._profilePopupName.textContent=e,this._profilePopupJob.textContent=t}},{key:"setUserAvatar",value:function(e){this._profilePopupAvatar.src=e}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=L(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function L(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function R(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupForm=t._element.querySelector(".popup__container"),t._handleCallbackSabmitForm=null,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;j(q(a.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleCallbackSabmitForm()}))}},{key:"setSubmitAction",value:function(e){this._handleCallbackSabmitForm=e}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_errorProcessing",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"handleAvatar",value:function(e){return fetch(this._url+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._errorProcessing)}},{key:"getUserInfo",value:function(){return fetch(this._url+"/users/me",{method:"GET",headers:this._headers}).then(this._errorProcessing)}},{key:"handleUserInfoApi",value:function(e){return fetch(this._url+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.userName,about:e.job})}).then(this._errorProcessing)}},{key:"getInitialCards",value:function(){return fetch(this._url+"/cards",{method:"GET",headers:this._headers}).then(this._errorProcessing)}},{key:"handleAddCard",value:function(e){return fetch(this._url+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._errorProcessing)}},{key:"getInformation",value:function(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}},{key:"deleteCard",value:function(e){return fetch(this._url+"/cards/".concat(e),{method:"DELETE",headers:this._headers}).then(this._errorProcessing)}},{key:"likeCard",value:function(e){return fetch(this._url+"/cards/likes/".concat(e),{method:"PUT",headers:this._headers}).then(this._errorProcessing)}},{key:"disLikeCard",value:function(e){return fetch(this._url+"/cards/likes/".concat(e),{method:"DELETE",headers:this._headers}).then(this._errorProcessing)}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var D,U=document.querySelector("#avatar-edit-button"),N=document.querySelector("#popup__avatar-info"),V=document.querySelector("#popup_show"),J=document.querySelector("#popup_element_show"),F=document.querySelector(".popup__input_name"),G=document.querySelector(".popup__input_about-me"),H=document.querySelector(".popup__container"),M=document.querySelector("#popup__element-info"),z={formSelector:".popup__container",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",inputErrorClass:"popup__input_error-active",errorClass:"popup__error"},$=new B({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"240299ab-5d52-47c4-861f-e301564a80f2","Content-Type":"application/json"}});$.getInformation().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?x(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];W.setUserAvatar(o.avatar),W.setUserInfo(o.name,o.about),D=o._id,oe.rendererItems(i)})).catch((function(e){return console.log(e)})),U.addEventListener("click",(function(){K.open(),Q.checkValidationOpenPopup(),K.renderRetention(!1)}));var K=new h("#popup_avatar",(function(e){K.renderRetention(!0),$.handleAvatar(e).then((function(e){W.setUserAvatar(e.avatar)})).catch((function(e){return console.log(e)}))}));K.setEventListeners();var Q=new r(N,z);Q.enableValidation();var W=new P({selectorProfilePopupName:".profile__title",selectorProfilePopupJob:".profile__subtitle",selectorAvatarPopup:".profile__avatar"});W.getUserInfo(),V.addEventListener("click",(function(){var e=W.getUserInfo();F.value=e.userName,G.value=e.job,Y.checkValidationOpenPopup(),X.open(),X.renderRetention(!1)}));var X=new h("#popup",(function(e){X.renderRetention(!0),$.handleUserInfoApi(e).then((function(e){W.setUserInfo(e.name,e.about)})).catch((function(e){return console.log(e)}))}));X.setEventListeners();var Y=new r(H,z);Y.enableValidation(),J.addEventListener("click",(function(){Z.open(),ee.checkValidationOpenPopup(),Z.renderRetention(!1)}));var Z=new h("#popup_element",(function(e){Z.renderRetention(!0),$.handleAddCard(e).then((function(e){oe.addItem(re(e))})).catch((function(e){return console.log(e)}))}));Z.setEventListeners();var ee=new r(M,z);ee.enableValidation();var te=new g("#popup__element-image");te.setEventListeners();var ne=new T("#popup_delete-card");ne.setEventListeners();var re=function(e){var n=new t({handleCardClick:function(){te.open(e.name,e.link)},handleDeleteCard:function(){ne.setSubmitAction((function(){$.deleteCard(e._id).then((function(){n.handleRemoveCard(),ne.close()})).catch((function(e){return console.log(e)}))})),ne.open()},data:e},"#element-template",D,$);return n.generateCard()},oe=new w({renderer:function(e){oe.addItem(re(e))}},".elements")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,